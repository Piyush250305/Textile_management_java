/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package textile_management_project;

import java.sql.*;

import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class returnprod extends javax.swing.JFrame {
Connection conn;
ResultSet rs,rs1,rs2,rs3,rs4,rs5,rs6;
    /**
     * Creates new form returnprod
     */
    public returnprod() {
      conn = connectdb.Connectdb();
        initComponents();
        
        try
        {
            Statement st = conn.createStatement();
            rs = st.executeQuery("SELECT cust_id FROM customer");
            while(rs.next())
            {
                String uid = rs.getString("cust_id");
                c1.addItem(uid);   
            }
            rs.close();
        }
        catch(SQLException e)
        {
            //JOptionPane.showMessageDialog(null,"Error in Displaying Record");
            System.out.println(e);
        }
        
        try
        {
            Statement st = conn.createStatement();
            rs4 = st.executeQuery("SELECT prod_id FROM product");
            while(rs4.next())
            {
                    String uid1 = rs4.getString("prod_id");
                    c2.addItem(uid1);
            }
        }
        catch(SQLException e)
            {
                //JOptionPane.showMessageDialog(null,"Error in Displaying Customer Record");
                System.out.println(e);
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        c1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        t3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        t4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        c2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        t5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Customer Id :");

        c1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c1ItemStateChanged(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Name is :");

        t1.setEditable(false);

        jLabel3.setText("Select Product Id :");

        jLabel4.setText("Product Name is :");

        t2.setEditable(false);
        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Product Quantity is :");

        t3.setEditable(false);

        jLabel6.setText("Total Price is :");

        t4.setEditable(false);

        jLabel7.setText("Reason for Returning Product :");

        ta1.setColumns(20);
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        c2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c2ItemStateChanged(evt);
            }
        });

        jLabel8.setText("Return Quantity :");

        t5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t5ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(c1, 0, 133, Short.MAX_VALUE)
                                    .addComponent(t1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(t2)
                                            .addComponent(t3)
                                            .addComponent(t4)
                                            .addComponent(c2, 0, 102, Short.MAX_VALUE))
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel8)
                                        .addGap(27, 27, 27)
                                        .addComponent(t5))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(21, 21, 21)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(34, 34, 34))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t2ActionPerformed

    private void c1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c1ItemStateChanged
        try
        {
        Statement st = conn.createStatement();
        rs2 = st.executeQuery("SELECT * FROM customer WHERE cust_id='"+c1.getSelectedItem()+"'");
        while(rs2.next())
        {
            t1.setText(rs2.getString("name"));
            
        }
        rs2.close();
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,"Error in Displaying Customer Record");
        }
        /*
        try{
            String sc = String.valueOf(c1.getSelectedItem());
            if(sc != null)
            {
            String sp = fetchProductForCustomer(sc);
            updateProductComboBox(sp);
            }  
            }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        */
        //int id = Integer.parseInt(i1);
        /*try
        {
            String sql = "SELECT prod_id FROM soldproduct WHERE cust_id='"+c1.getSelectedItem()+"'";
            PreparedStatement p = conn.prepareStatement(sql);
            rs1 = p.executeQuery(); 
            String u = rs1.getString("prod_id");
            if(rs1.next())
            {
                
                c2.addItem(u);
            }
            else
            {
                c2.setSelectedItem(u);
                //c2.setSelectedItem(prod_id);
            }
            rs1.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }*/
    }//GEN-LAST:event_c1ItemStateChanged

    private void c2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c2ItemStateChanged
        try
        {
        String i = String.valueOf(c1.getSelectedItem());
        String j = String.valueOf(c2.getSelectedItem());
        PreparedStatement st = conn.prepareStatement("SELECT * FROM soldproduct WHERE prod_id=? AND cust_id=?");
        st.setString(1, j);
        st.setString(2,i);
        rs3 = st.executeQuery();
        while(rs3.next())
        {
            t2.setText(rs3.getString("prod_nm"));
            t3.setText(rs3.getString("prod_qnt"));
            t4.setText(rs3.getString("total_prc"));

        }
        // s1.getSelectedItem().toString();
        rs3.close();
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,"Error in displaying Product Record");
            //System.out.println(e);
        }
    }//GEN-LAST:event_c2ItemStateChanged

    private void t5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new returnprod().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String rq,ci,cn,pi,pn,iq,ror;
        ci = String.valueOf(c1.getSelectedItem());
        cn = t1.getText();
        pi = String.valueOf(c2.getSelectedItem());
        pn = t2.getText();
        iq = t3.getText();
        rq = t5.getText();
        ror = ta1.getText();
        int q1,q2,q3;
        q1 = Integer.parseInt(iq);
        q2 = Integer.parseInt(rq);
        q3 = q1 - q2;
        String uq = Integer.toString(q3);
        
        if(q1<q2)
        {
            JOptionPane.showMessageDialog(null,"Return Quantity cannot be Greater than issued Quantity !!");
        }
        else
        {
        try
        {
            Statement st = conn.createStatement();
            st.executeUpdate("INSERT INTO returnproduct(cust_id,cust_nm,prod_id,prod_nm,issued_qnt,return_qnt,rsn_for_rt)VALUES('"+ci+"','"+cn+"','"+pi+"','"+pn+"','"+iq+"','"+rq+"','"+ror+"')");
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        try
        {
            PreparedStatement st2 = conn.prepareStatement("UPDATE soldproduct SET prod_qnt = ? WHERE prod_id = ? AND cust_id = ?");
            st2.setString(1, uq);
            st2.setString(2,pi);
            st2.setString(3,ci);           
            st2.executeUpdate();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        try
        {
            Statement st4 = conn.createStatement();
            rs5 = st4.executeQuery("SELECT quantity FROM product WHERE prod_id = '"+c2.getSelectedItem()+"'");
            rs5.next();
            String aq = rs5.getString("quantity");
            int q11 = Integer.parseInt(aq);
            int q12 = Integer.parseInt(rq);
            int q13 = q11 + q12;
            String q14 = Integer.toString(q13);
            
            PreparedStatement st3 = conn.prepareStatement("UPDATE product SET quantity = ? WHERE prod_id = ?");
            st3.setString(1, q14);         
            st3.setString(2, pi);         
            st3.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Product Returned Successfully !!");
            setVisible(false);
            new returnprod().setVisible(true);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        try
        {
            Statement st5 = conn.createStatement();
            rs6 = st5.executeQuery("SELECT price FROM product WHERE prod_id = '"+c2.getSelectedItem()+"'");
            rs6.next();
            String p = rs6.getString("price");
            int tp = Integer.parseInt(t4.getText());
            int rq1 = Integer.parseInt(t5.getText());
            int p1 = Integer.parseInt(p);
            int p2 = p1*rq1;
            int t3 = tp - p2;
            String x = Integer.toString(t3);
            
            PreparedStatement st3 = conn.prepareStatement("UPDATE soldproduct SET total_prc = ? WHERE prod_id = ? AND cust_id = ?");
            st3.setString(1, x);         
            st3.setString(2, pi);         
            st3.setString(3, ci);         
            st3.executeUpdate();
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        new dashboard().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        
    }//GEN-LAST:event_c1ActionPerformed

    /*private String fetchProductForCustomer(String customer) {
        String query = "SELECT prod_id FROM soldproduct WHERE cust_id = ?";
        try (PreparedStatement preparedStatement = conn.prepareStatement(query)) {
            preparedStatement.setString(1, customer);
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                return resultSet.getString("prod_id");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    
    private void updateProductComboBox(String selectedProduct) {
        c2.removeAllItems();
        while (selectedProduct != null) {
            c2.addItem(selectedProduct);
        }
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returnprod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returnprod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returnprod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returnprod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returnprod().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> c1;
    private javax.swing.JComboBox<String> c2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JTextField t5;
    private javax.swing.JTextArea ta1;
    // End of variables declaration//GEN-END:variables
}
